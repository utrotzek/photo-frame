ARG PHP_VERSION=7.4
ARG UBUNTU_VERSION=20.04
FROM alpine AS qemu

#QEMU Download
ENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz
RUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1

FROM arm32v7/ubuntu:$UBUNTU_VERSION
# Add QEMU
COPY --from=qemu qemu-arm-static /usr/bin

ARG DEBIAN_FRONTEND=noninteractive
ARG USER_NAME=app
ARG UID=1000
ARG GID=1000
ARG PHP_VERSION


RUN groupadd -g $GID -o $USER_NAME && \
    useradd -m -u $UID -g $GID $USER_NAME

RUN apt-get update && \
    apt-get install -y \
        unzip \
        nodejs \
        vim \
        npm \
        apache2 \
        openssh-client \
        software-properties-common \
        ca-certificates && \
    rm -rf /var/lib/apt/lists/*

RUN add-apt-repository ppa:ondrej/php && \
    apt-get update && \
    apt-get install -yq \
        php${PHP_VERSION} \
        php${PHP_VERSION}-pdo \
        php${PHP_VERSION}-xml \
        php${PHP_VERSION}-json \
        php${PHP_VERSION}-mbstring \
        php${PHP_VERSION}-tokenizer \
        php${PHP_VERSION}-ctype \
        php${PHP_VERSION}-bcmath \
        php${PHP_VERSION}-sqlite \
        libapache2-mod-php

COPY docker/app/resources/php/composer.phar /usr/bin/composer

# ------------------------------------------------------------------------------
# configure apache
# ------------------------------------------------------------------------------
RUN a2dissite 000-default
RUN a2enmod rewrite

COPY docker/app/resources/apache/ports.conf /etc/apache2/ports.conf
COPY docker/app/resources/apache/site.conf /etc/apache2/sites-enabled/site.conf

ENV APACHE_RUN_USER=$USER_NAME
ENV APACHE_RUN_GROUP=$USER_NAME
RUN chown -R $USER_NAME:$USER_NAME /var/log/apache2*
RUN chown -R $USER_NAME:$USER_NAME /var/lock/apache2*
RUN chown -R $USER_NAME:$USER_NAME /var/run/apache2*

# forward request and error logs to docker log collector
RUN ln -sf /dev/stdout /var/log/apache2/access.log && \
    ln -sf /dev/stderr /var/log/apache2/error.log

# ------------------------------------------------------------------------------
# Initialize database folder
# ------------------------------------------------------------------------------
RUN mkdir -p /var/database/ && \
    chown $USER_NAME:$USER_NAME /var/database/

USER $USER_NAME

# ------------------------------------------------------------------------------
# install the app
# ------------------------------------------------------------------------------
COPY --chown=$USER_NAME:$USER_NAME app /var/www/html/app

WORKDIR /var/www/html/app
#run npm dev because of a bug with non working animations in production context
RUN composer install && \
    npm config set registry http://registry.npmjs.org/ && \
    npm install && \
    npm run dev

COPY docker/app/resources/start.sh /usr/bin/local/start.sh
CMD ["/usr/bin/local/start.sh"]